#V1.0.0
name: reusable_create_pre-release

on:

  workflow_call:

    inputs:
      version:
        description: "Número de versión del pre-release"
        required: true
        type: string        

jobs:

  CrearRelease:
    permissions: write-all
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: "Validar número de versión"
        run: |
          echo "Version {{'${{'}}inputs.version{{ '}}' }}"
          [[ "{{'${{'}}inputs.version{{ '}}' }}" =~ ^([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*).*$ ]] && echo "Correcto" || exit 1
          echo "> Validando si existe el pre-release"
          ! git tag {{'${{'}}inputs.version{{ '}}' }}

      
      - name: "Configurar Git"
        run: |
          git config --global user.name 'Github'
          git config --global user.email 'workflow@noreply.github.com'
          git branch --show-current
          git checkout {{'${{'}}inputs.version{{ '}}' }}
          git fetch
          git branch -a --contains tags/{{'${{'}}inputs.version{{ '}}' }}

      - name: "Crear rama release"
        run: |
          git checkout {{'${{'}}inputs.version{{ '}}' }}
          git checkout -b releases/{{'${{'}}inputs.version{{ '}}' }}
          # Copiando los workflows actualizados...
          git checkout main .github/workflows/manual_deploy_dev.yml || echo "Sin cambios"
          git checkout main .github/workflows/manual_hotfix.yml || echo "Sin cambios"
          git checkout main .github/workflows/manual_redeploy.yml || echo "Sin cambios"
          git checkout main .github/workflows/manual_release.yml || echo "Sin cambios"
          git checkout main .github/workflows/push-manual_main.yml || echo "Sin cambios"
          git checkout main pfg-sam.json || echo "Sin cambios"
          git commit -m "ci(github): Se agregan workflows actualizados" || echo "Sin cambios"
          git diff HEAD^ HEAD
          git tag --force {{'${{'}}inputs.version{{ '}}' }} 
          git push origin releases/{{'${{'}}inputs.version{{ '}}' }} || echo "No se pudo crear la rama de release"
          git push origin {{'${{'}}inputs.version{{ '}}' }} --force || echo "No se pudo crear el tag de release"

      # To do: Eliminar rama de fix


      # Se actualiza el release marcado como pre-release
      - name: Release
        run: |
          gh release delete {{'${{'}}inputs.version{{ '}}' }} -y || echo "No hay release por eliminar"
          gh release create {{'${{'}}inputs.version{{ '}}' }} --title {{'${{'}}inputs.version{{ '}}' }} -F CHANGELOG.md
        env:
          GITHUB_TOKEN: {{'${{'}} secrets.GITHUB_TOKEN {{ '}}' }}